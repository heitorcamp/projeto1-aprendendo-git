PASSOS A SEREM FEITOS PARA CRIAR E MANIPULAR AS BRACHS

1-git pull da branch principal
2-Gerar uma nova branch a partir da branch principal
3-Trabalhar e adiconar novas funcionalidades a nova branch que criou
4-Finalizar o trabalho na branch q criou
5-git checkout na branch principal
6-git pull (para puxar as novas atualizaçao da nuvem)
7-Mergiar(unir) o codigo da branch temporaria com a branch principal(depois de testar)
8-git push da branch principal


PRINCIPAIS COMANDOS \/


git add "nome aequivo" - add um arquivo ao controle de versao.

git add . -add todos os arquivos de uma vez

git status - ver os arquivos adicionado no controle de versão

git commit -m "commit inicial" - como se fosse a primeira versao

git remote add origin "link do repositorio no git" - vai definir para onde o codigo vai ser enviado

DEPOIS QUE ALTERAR UM ARQUIVO DEVE SALVAR A MODIFICAÇAO

git add . - para salvar

git commit-m "nome da nova versao" - salvar com nome doque foi adicionado ex: cadastro de usuario.

git push - para enviar a atualizaçao para o github

---------------------------
NAVERGAR SOBRE AS VERSOES

git reflog - para ver o historico de versoes

git reset --hard NOME DA VERSAO - vai voltar para versao escolhida

BRANCH -"GALHOS"
----------------------------------
vc vai ter uma branch principal onde vai armazenar somente codigos q esta funcionando, e tera outras para fazer testes

git branch - ira mostrar quais branch estao disponiveis no momento

git branch NOME - ira criar uma nova branch

git checkout NOME A BRANCH QUE DESEJA - ira mudar de branch


UNIR OS CODIGOS DA BRANCH PARA TESTE PARA A BRANCH PRINCIPAL
---------------------------------------

git pull - VAI PUXAR AS ULTIMAS ATUALIZAÇOES DO SERVIDOR(CASO ALGUEM TENHA ALTERADO VC VAI SALVAR EM CIMA DE UMA VERSAO ANTIGA)

git branch - VER AS BRANCH CRIADAS

git checkout master - IR PARA A BRANCH PRINCIPAL

git marge NOME DA BRANCH QUE VC QUER PEGAR O CODIGO.
(VC DIGITA ESTE COMANDO DA BRENCH PRINCIPAL COM O NOME DA BRANCH Q VC QUER PUXAR.)

CRIAR UMA BANCH APRTIR DA BRANCH PRINCIPAL
------------------
git checkout -b 'NOME DA BRANCH NOVA' 'NOME DA BRANCH Q QUER COPIAR'.


ESCONDER ARQUIVOS QUE NAO QUER QUE VEJAM
COMANDO NO TERMINAL GIT

touch .gitignore - VAI CRIAR UM ARQUIVO NA PASTA DO PROJETO

ABRA O ARQUIVO COM NOTPAD
ESCREVA O NOME DO ARQUIVO Q VC QUER ESCONDER
ADD O ARQUIVO IGNORE NO git add.




